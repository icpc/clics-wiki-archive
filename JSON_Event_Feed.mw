This page describes a draft for a JSON event feed.

== Getting the feed ==

The event feed is served over HTTPS at the `/event-feed` endpoint.

Access control uses the same [[Draft_CCS_REST_interface#Roles | user roles]] as defined for the REST API.

=== Filtered feeds ===

If a client only wants some events the feed can be filtered with the "events" URL argument:

 /event-feed?events=submissions,teams

If not specified all events will be sent. If specified only the listed events will be sent.

If a client does not want the "data" part of events this can be removed with the "notification-only" URL argument:

 /event-feed?notification-only=submissions,teams

If not specified all events will include data. If specified the listed events will not include data but all others will.

If an event is left out of "events" but included in "notification-only" it will not be sent (and not include data) as expected.

If a client wants data from some point in time this can be done with the "timestamp" URL argument:

 /event-feed?timestamp=2014-06-25T11%3A22%3A05.034%2B01

If specified the event feed will include all events strictly ''after'' the specified timestamp. If not specified the event feed will include all events from the beginning of the feed.

== Feed format ==

The feed is served as [http://specs.okfnlabs.org/ndjson/ Newline delimited JSON], with every event as it's own JSON object.

The general format for events is:
 {"event": "<event type>", "endpoint": "<API endpoint>", "timestamp": "<timestamp>", "data": { <event data> }}

Most events has a corresponding [[Draft_CCS_REST_interface | REST interface]] endpoint. The "data" key will, when available, contain exactly what would be returned when calling the corresponding REST endpoint.

Events are guaranteed to come in timestamp order. (Note though that this only applies to the event feed timestamp. Some events might have timestamps inside the "data" value, those might be different and specifically out of order).

== Events ==

=== Contest ===

Note: since the contest endpoint returns an empty object when no current contest is running, an event will be sent at contest start and end. 

Example:
 {"event": "contest", "endpoint": "/contest", "timestamp": "2014-06-25T10:00:00+01", "data":
   {"id":"7b0dd4ea-19a1-4434-9034-529ebe55ab45","name":"2014 ICPC World Finals",
   "formal_name":"38th Annual World Finals of the ACM International Collegiate Programming Contest",
   "start_time":"2014-06-25T10:00:00+01","duration":"5:00:00","scoreboard_freeze_duration":"1:00:00","penalty_time":20}
 }

=== Languages ===

Example:
 {"event": "languages", "endpoint": "/languages", "timestamp": "2014-06-25T10:00:00+01", "data": [{"id":"1-java","name":"Java"},
  {"id":"cpp","name":"GNU C++"},
  {"id":"4358281971166881160","name":"Python"}
 ]}

=== Problems ===

==== Examples ====
Initial set up:
 {"event": "problems", "endpoint": "/problems", "timestamp": "2014-06-25T10:00:00+01", "data": [
  {"id":"10-asteroids","label":"A","shortname":"asteroids","name":"Asteroid Rangers","ordinal":1,"color":"blue","rgb":"#00f"},
  {"id":"B","label":"B","shortname":"bottles","name":"Curvy Little Bottles","ordinal":2,"color":"gray","rgb":"#808080"}
 ]}
Problem added:
 {"event": "problems", "endpoint": "/problems", "id": "circles", "timestamp": "2014-06-25T10:00:00+01", "data": 
  {"id":"circles","label":"C","shortname":"circles","name":"Circles","ordinal":3,"color":"red","rgb":"#f00"}
 }
Problem updated:
 {"event": "problems", "endpoint": "/problems", "id": "10-asteroids", "timestamp": "2014-06-25T10:00:00+01", "data": 
  {"id":"10-asteroids","label":"A","shortname":"asteroids","name":"Asteroid Rangers","ordinal":1,"color":"orange","rgb":"#f0b034"}
 }
Problem deleted:
 {"event": "problems", "endpoint": "/problems", "id": "circles", "timestamp": "2014-06-25T10:00:00+01", "data": null}

=== Test cases ===

Example:
 {"event": "test-cases", "endpoint": "/problems/10-asteroids/test_cases", "timestamp": "2014-06-25T10:00:00+01", "data": [{"id":"10-asteroids-28","problem_id":"10-asteroids","ordinal":28,"description":"Test corner case of zero input",
   "sample":false,"input":"<base64_string>","answer":"<base64_string>"}
 ]}

=== Teams ===

Example:
 {"event": "teams", "endpoint": "/teams", "timestamp": "2014-06-25T10:00:00+01", "data": [{"id":"abc123","label":"123","icpc_id":"201433","name":"Shanghai Tigers","institution_id":"inst123"},
  {"id":"11","label":"11","name":"CMU1","institution_id":"inst105"}
 ]}

=== ... ===

...

=== Heartbeat ===

The event feed is guaranteed to send some data at least every 120 seconds. If no other event is sent, a heartbeat will be.

The heartbeat event does *not* have a corresponding API endpoint, so the endpoint and data keys are missing.

Example:
 {"event": "heartbeat", "timestamp": "2014-06-25T10:00:00+01"}
