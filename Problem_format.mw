All files related to a given problem lie in one directory and its
subdirectories. The name of the directory is also the short-name or
identifier for the problem.

=== Directory structure ===

 <short-name>/
       problem.cfg - problem configuration file
       problem_statement/
               problem.tex - problem statement
               - any files that description.tex needs to include, e.g. images
       sample_data/
               *.in - sample input files
               *.ans - sample answer files
       judge_data/
               *.in - input files
               *.ans - answer files
               *.txt - optional data file description
       test_submissions/
               accepted/
                       - single file or directory per solution
               wrong_answer/
                       - single file or directory per solution
               time_limit_exceeded/
                       - single file or directory per solution
               run_time_error/
                       - single file or directory per solution
       input_validators/
               - single file or directory per validator
       output_validators/
               - single file or directory per validator

=== Sample Directory / Filenames ===

This is a sample list of directories/files for a problem named ''squares''

 squares/problem.cfg
 squares/problem_statement/problem.tex
 squares/sample_data/squares.in 
 squares/sample_data/squares.ans
 squares/judge_data/squares1.in 
 squares/judge_data/squares2.in 
 squares/judge_data/squares1.ans
 squares/judge_data/squares2.ans
 squares/judge_data/squares.txt
 squares/test_submissions/accepted/squares.cpp
 squares/test_submissions/wrong_answer/wrong.cpp
 squares/test_submissions/time_limit_exceeded/tle.c
 squares/test_submissions/run_time_error/rte.c
 squares/input_validators/validator1
 squares/output_validators/ovalidator1

=== problem.cfg ===

FIle in .cfg (a.k.a. .ini) format, i.e. key/value pairs.

{| class="wikitable"
! Key !! Comments !! Example
|-
| name || mandatory || Hello World
|-
| short-name || mandatory || hello
|-
| source || mandatory || ICPC World Finals 2011
|-
| author || optional, defaults to "Unknown"  ||
|-
| license || optional, defaults to "cc by-sa"  ||
|-
| rights-owner || mandatory || ICPC
|-
| time-limit-multiplier || optional, defaults to 3 || 
|-
| time-limit-safety-margin || optional, defaults to 5 || 
|-
| memory-limit || optional, defaults to 2GB || 
|-
| output-limit || optional, defaults to 8MB || 
|-
| validator 
| set of values from the following:<br>
"ignore-case" - ignore case differences<br>
"ignore-space-change" - only cares if there is *some* whitespace, ignores amount and type of whitespace<br>
"float-relative-tolerance X" - accepts token if it is a floating point number end the relative error is <= X<br>
"float-absolute-tolerance X" - accepts token if it is a floating point number end the absolute error is <= X<br>
"float-tolerance X" - accepts token if "float-relative-tolerance X" or "float-absolute-tolerance X" would<br>
"custom" - use a custom output validator. Must be first value, values following will be given as arguments to validator<br>
|
|}

===Sample problem.cfg===
 
As an standard .ini file blank lines and lines starting with # will be ignored

 name=Squares to Circles
 short-name=squares
 source=ICPC Mid-Atlantic Regional Contest
 author=Judge X
 # license  optional, defaults to "cc by-sa"  
 rights-owner=ICPC
 time-limit-multiplier=2
 time-limit-safety-margin=3
 # memory-limit  optional, defaults to 2GB  
 # output-limit  optional, defaults to 8MB  
 validator=ignore-space-change , float-absolute-tolerance X
 # validator=custom --limits 3,8,44 --haltfirst


=== problem.tex ===

Latex file that only includes the problem text itself, including input
and output specifications, but not sample input and output. A template
will be provided that \imports this file as well as the sample input
and output. Files needed by this file must all be in
<problem>/problem_statement/ , problem.tex should include auxiliary files as if
working directory is <problem>/problem_statement/ .

=== <short-name>/*_data/ ===

All input and answer files must have the filename extension .in and
.ans respectively. Optionally a text file describing the purpose of an
input file may be present. Input, answer and description files are
matched by the base name.

=== <short-name>/test_submissions/*/ ===

Every file or directory in these directories represent a separate
solution. Same requirements as for submissions with regards to
filenames. subdirectories that would be empty can be left out.

=== <short-name>/*_validators/ ===

Every file or directory in these directories represent a separate
validator. A validator in the form of a directory may include a
makefile, if so it will be used. If not, the validator will be
compiled as if it was a solution. Input and output validators must
adhere to the input and output validator standard respectively.

:'''Comment:''' Can the validator be an executable or a shell/perl/etc. script ? [[User:Douglas Lane|Douglas Lane]] 20:44, 16 February 2011 (CET)

=== Verification ===

Solutions or validators in languages that is not supported by the CCS
should be ignored and a warning to that effect shown.

 Warn if:
       there is no problem.tex
       there are no *.in in sample_data/

 Error if:
       there is no problem.cfg
       any value in problem.cfg is invalid
       there are no *.in in judge_data/
       there are no solutions in test_submissions/accepted/
       there are no validators in input_validators/
       validator begins with "custom" and there are no validators in output_validators/

 For each *.in in public_data and judge_data:
       For each validator in input_validators/:
               If the validator does not accept the input file: Error!

 For each solution in test_submissions/accepted/:
       For each *.in in public_data and judge_data:
               Run the solution on the input
               For the built-in validator if corrector is "diff" or each validator in output_validators/:
                       If the validator does not accept the output of the solution: Error!
 Let t be the longest time any of the solutions ran on any of the inputs.

 For each solution in test_submissions/time_limit_exceeded/:
       For each *.in in public_data and judge_data:
               Run the solution on the input for at least t*time-limit-safety-margin seconds.
 Let t_slow be the shortest time any of the solutions ran on any of the inputs.

 If t_slow is less than t*time-limit-safety-margin: Error!

 The time-limit should be at least t*time-limit-multiplier and at most 1 second more.

 For each solution in test_submissions/wrong_answer/:
       For each *.in in public_data and judge_data:
               Run the solution on the input
               For the built-in validator if corrector = "diff" or each validator in output_validators/:
                       If the validator accepts the output of the solution: Error!

 For each solution in test_submissions/run_time_error/:
       For each *.in in public_data and judge_data:
               Run the solution on the input
               If the solution is not judged Run-Time Error: Error!
